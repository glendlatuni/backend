// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Schedule {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  DateOfWorship String
  TimeOfWorship String
  Place         String
  Members_id    String?     @unique @db.ObjectId
  Members       Members?    @relation(fields: [Members_id], references: [id], onDelete: Cascade)
  Leaders       String
  Liturgos      String
  Description   String
  Attendees     Int         @default(0)
  Attending     Attendees[]
}

model Members {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  FullName       String
  Gender         String
  BirthPlace     String
  BirthDate      DateTime?
  FamilyPosition String
  Category       String
  Family         Family      @relation(fields: [Family_id], references: [id], onDelete: Cascade)
  Family_id      String      @db.ObjectId
  Zones          Int
  KSP            String
  Address        String
  PhoneNumber    String
  User           User?       @relation(fields: [user_id], references: [id])
  user_id        String?     @unique @db.ObjectId
  IsLeaders      Boolean
  IsLiturgos     Boolean
  Schedule       Schedule?
  Attendees      Attendees[]
  profilePhoto   String?
}

model Family {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  FamilyName    String
  FamilyMembers Members[] 
}

model Attendees {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  user        Members  @relation(fields: [user_id], references: [id])
  user_id     String   @db.ObjectId
  Schedule    Schedule @relation(fields: [Schedule_id], references: [id])
  Schedule_id String   @db.ObjectId
  Dates       DateTime
  status      String
}


model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  email    String   @unique
  password String
  Member   Members? @relation
}

