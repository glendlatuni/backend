// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


enum role {
  ADMIN
  MEMBERS
  SUPERUSER
}

model IsLeaders {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  Name       String
  Title      String // sym pnt pdt
  Member     Members?   @relation("MemberLeader", fields: [Members_id], references: [id], onDelete: SetNull)
  Members_id String?    @unique @db.ObjectId
  Schedule   Schedule[]
  onDuty     Boolean    @default(true)
  Admin      Boolean    @default(false)
}

model Schedule {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  Category    String
  Date        DateTime
  Day         String
  Month       String
  Years       String
  Time        String
  Address     String
  Member      Members?      @relation(fields: [Member_id], references: [id], onDelete: Cascade)
  Member_id   String?       @db.ObjectId
  IsLeaders   IsLeaders     @relation(fields: [Leaders_id], references: [id])
  Leaders_id  String        @db.ObjectId
  Liturgos    String
  Description String
  Attendees   Attendees[]
  UploadPhoto UploadPhoto[]
}

model Members {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  FullName       String
  Gender         String
  BirthPlace     String
  BirthDate      DateTime
  FamilyPosition String
  Category       String
  Family         Family        @relation(fields: [Family_id], references: [id], onDelete: Cascade)
  Family_id      String        @db.ObjectId
  Zones          Int  // ini akan jadi patokan untuk membatasi akses dari ZOna lain
  KSP            String
  Address        String
  PhoneNumber    String
  User           User?
  IsLeaders      IsLeaders?    @relation("MemberLeader")
  Leaders        Boolean
  Liturgos       Boolean
  Schedule       Schedule[]
  Attendees      Attendees[]   @relation(fields: [Attendees_id], references: [id])
  Attendees_id   String[]      @db.ObjectId
  ProfilePhoto   String?
  UploadPhoto    UploadPhoto[]
  Role           role          @default(MEMBERS)
}

model Family {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  FamilyName    String
  FamilyMembers Members[]
}

model Attendees {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  Schedule    Schedule  @relation(fields: [Schedule_id], references: [id], onDelete: Cascade)
  Schedule_id String    @unique @db.ObjectId
  Members     Members[] @relation(fields: [Members_ID], references: [id])
  Members_ID  String[]  @db.ObjectId
  Dates       DateTime
  Man         Int?
  Woman       Int?
  Kids        Int?
  Total       Int?
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  Email     String   @unique
  Password  String
  Member    Members? @relation(fields: [Member_id], references: [id])
  Member_id String?  @unique @db.ObjectId
}

model UploadPhoto {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  CreatedAt     DateTime @default(now())
  UploadedPhoto String[]
  Description   String

  Schedule    Schedule @relation(fields: [Schedule_id], references: [id], onDelete: Cascade)
  Schedule_id String   @db.ObjectId

  Members    Members @relation(fields: [Members_id], references: [id], onDelete: Cascade)
  Members_id String  @db.ObjectId
}
